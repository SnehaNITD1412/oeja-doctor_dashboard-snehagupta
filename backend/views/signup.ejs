<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center vh-100">
        
        <form id="signup-form" method="POST" action="/register" class="border p-4 rounded shadow">
            <h2 class="mb-4">Sign Up</h2>
            <div class="mb-3">
                <label for="firstName" class="form-label">First Name</label>
                <input type="text" class="form-control" id="firstName" name="firstName" placeholder="Enter your first name" required>
            </div>
            <div class="mb-3">
                <label for="lastName" class="form-label">Last Name</label>
                <input type="text" class="form-control" id="lastName" name="lastName" placeholder="Enter your last name" required>
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" class="form-control" id="email" name="email" placeholder="Enter your email" required>
            </div>
          
<div class="mb-3">
    <label for="password" class="form-label">Password</label>
    <input type="password" class="form-control" id="password" name="password" placeholder="Enter your password" required>
    <div id="passwordHelpBlock" class="form-text">...</div>
</div>

<div class="mb-3">
    <label for="confirmPassword" class="form-label">Confirm Password</label>
    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password" required>
</div>
<div id="error-message" class="mb-3" style="color: red;"></div>
<button type="submit" class="btn btn-primary">Sign Up</button>
          


            <div id="error-message" class="mb-3" style="color: red;"></div>

            <button type="submit" class="btn btn-primary">Sign Up</button>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Select the form and the error message container elements from the DOM.
        const form = document.getElementById('signup-form');
        const errorMessageDiv = document.getElementById('error-message');

        // Add a listener to execute a function when the form is submitted.
        form.addEventListener('submit', async (event) => {
            // Prevent the default synchronous form submission behavior.
            event.preventDefault();

            // Clear any previous error messages.
            errorMessageDiv.textContent = '';

            // Collect the form data into a structured object.
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            // Client-side check for password confirmation
            if (data.password !== data.confirmPassword) {
                errorMessageDiv.textContent = 'Passwords do not match.';
                return; // Stop the submission
            }

            try {
                // Send the form data to the server asynchronously using the Fetch API.
                const response = await fetch('/register', {
                    method: 'POST',
                    headers: {
                        // Inform the server that the request body is in JSON format.
                        'Content-Type': 'application/json'
                    },
                    // Convert the JavaScript data object into a JSON string.
                    body: JSON.stringify(data)
                });

                // Process the server's response.
                if (response.ok) {
                    // A successful response (HTTP status 200-299) indicates successful registration.
                    // Redirect the user to the login or verification page.
                    console.log('Registration successful. Redirecting...');
                    window.location.href = '/login'; // Or '/verify' as per your application's flow.
                } else {
                    // An unsuccessful response indicates a validation error or other server issue.
                    // Parse the JSON error message from the response body.
                    const errorData = await response.json();
                    // Display the error message in the designated container.
                    errorMessageDiv.textContent = errorData.error || 'An unknown error occurred.';
                }
            } catch (error) {
                // Handle network errors or issues with the fetch request itself.
                console.error('An error occurred during form submission:', error);
                errorMessageDiv.textContent = 'A network error occurred. Please try again.';
            }
        });
    </script>
</body>
</html>